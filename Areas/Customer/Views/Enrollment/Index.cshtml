@model IEnumerable<IdentityText.Models.Enrollment>
@{
    ViewData["Title"] = "صفحة الكورسات";
}


<div class="container py-5">
    <h2 class="mb-5 text-center text-primary fw-bold display-5" style="color:rgb(169 27 102) !important">
        @ViewData["Title"]
    </h2>

    <div class="row g-4">
        @if (!Model.Any())
        {
            <h3>no courses yet!</h3>
        }
        else
        {
            @foreach (var enrollment in Model)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="course-card p-4 d-flex flex-column justify-content-between">
                        <div class="text-center">
                            <h5 class="course-title mb-3">
                                <i class="bi bi-easel2-fill me-2 text-gradient"></i>
                                @enrollment.ClassGroup?.Title
                            </h5>

                            <p class="text-muted mb-2">
                                <i class="bi bi-currency-dollar me-1"></i>
                                <strong>Price : </strong> @enrollment.ClassGroup.Price
                            </p>

                            <p class="text-muted mb-2">
                                <i class="bi bi-calendar-event me-1"></i>
                                <strong>Enroll Data : </strong> @enrollment.EnrollmentDate.ToString("dd MMM yyyy")
                            </p>

                            <div class="mb-3">
                                <strong>Status : </strong>
                                @switch (enrollment.EnrollmentStatus)
                                {
                                    case IdentityText.Enums.EnrollmentStatus.PendingPayment:
                                        <span class="badge status-badge bg-warning text-dark">
                                            <i class="bi bi-clock-history me-1"></i> Waiting for payment
                                        </span>
                                        break;
                                    case IdentityText.Enums.EnrollmentStatus.Active:
                                        <span class="badge status-badge bg-success">
                                            <i class="bi bi-check-circle me-1"></i> Active
                                        </span>
                                        break;
                                    case IdentityText.Enums.EnrollmentStatus.Canceled:
                                        <span class="badge status-badge bg-danger">
                                            <i class="bi bi-x-circle me-1"></i> Canceled
                                        </span>
                                        break;
                                    default:
                                        <span class="badge bg-secondary">@enrollment.EnrollmentStatus.ToString()</span>
                                        break;
                                }
                            </div>

                            <p class="text-secondary small">
                                <i class="bi bi-chat-left-text me-1"></i>
                                <strong>Notes : </strong> @enrollment.Notes
                            </p>
                        </div>

                        <div class="d-flex justify-content-center gap-3 mt-4">
                            <button type="button" class="btn btn-glow-danger btn-sm rounded-pill" onclick="confirmDelete(@enrollment.EnrollmentId)">
                                <i class="bi bi-trash"></i> Delete
                            </button>

                            @if (enrollment.EnrollmentStatus == IdentityText.Enums.EnrollmentStatus.PendingPayment)
                            {
                                <a asp-action="ProcessPayment" asp-route-id="@enrollment.EnrollmentId" class="btn btn-glow-success btn-sm rounded-pill">
                                    <i class="bi bi-credit-card"></i> Pay
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }

        }
      </div>
</div>

@section Scripts {
    @if (TempData["notification"] != null)
    {
        <script>
            toastr.success('@TempData["notification"]');
        </script>
    }

    <script>
        function confirmDelete(id) {
            Swal.fire({
                title: "هل أنت متأكد؟",
                text: "لن تتمكن من التراجع عن هذا الإجراء!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "نعم، احذفه!",
                cancelButtonText: "إلغاء"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/Customer/Enrollment/Delete?id=" + id;
                }
            });
        }
    </script>
}

<style>
    body {
        background: linear-gradient(120deg, #f0f4ff, #ffffff);
    }

    .course-card {
        background: #f1f5ff;
        border-radius: 1.5rem;
        box-shadow: 8px 8px 16px #d1d9e6, -8px -8px 16px #ffffff;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

        .course-card:hover {
            transform: translateY(-6px);
            box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.1), -4px -4px 10px rgba(255, 255, 255, 0.5);
        }

    .course-title {
        font-size: 1.3rem;
        font-weight: bold;
        color: #3f4eae;
    }

    .text-gradient {
        background: linear-gradient(45deg, #4e54c8, #8f94fb);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
    }

    .status-badge {
        padding: 0.4em 0.9em;
        font-size: 0.85rem;
        border-radius: 999px;
    }

    .btn-glow-success {
        background: #28a745;
        color: white;
        box-shadow: 0 0 8px #28a74580;
        transition: 0.3s;
    }

        .btn-glow-success:hover {
            background: #218838;
            box-shadow: 0 0 12px #218838aa;
        }

    .btn-glow-danger {
        background: #dc3545;
        color: white;
        box-shadow: 0 0 8px #dc354580;
        transition: 0.3s;
    }

        .btn-glow-danger:hover {
            background: #c82333;
            box-shadow: 0 0 12px #c82333aa;
        }
</style>
