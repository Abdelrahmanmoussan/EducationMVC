@model IdentityText.Models.ViewModel.CourseCodeVM

@{
    ViewData["Title"] = "تأكيد كود الكورس";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="bg-white shadow-lg border-0 p-4 custom-code-card rounded-5">
                <h4 class="mb-4 text-center text-gradient">Enter Course Code to Join Lecture</h4>

                @if (!string.IsNullOrEmpty(Model.ErrorMessage)) {
                    <div class="alert alert-danger text-center rounded-pill shadow-sm">@Model.ErrorMessage</div> }

                <form asp-action="EnterCode" method="post" class="rounded-4 p-3 bg-light">
                    <input type="hidden" asp-for="ClassGroupId" />

                    <div class="mb-4">
                        <label asp-for="EnteredCode" class="form-label fw-semibold">Course Code</label>

                        <div class="position-relative">
                            <input asp-for="EnteredCode" class="form-control text-center rounded-pill shadow-sm pe-5" autocomplete="off" id="codeInput" />  
                            <button type="button" onclick="pasteCode()" class="btn btn-icon position-absolute top-50 end-0 translate-middle-y me-2 shadow-sm" title="Paste">
                                <i class="bi bi-clipboard fs-5"></i>
                            </button>
                        </div>
                        <span asp-validation-for="EnteredCode" class="text-danger"></span>
                    </div>

                    <button type="submit" class="btn custom-blue-btn w-100 rounded-pill py-2 fs-5">
                        <i class="bi bi-door-open me-2"></i> Join Lecture
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .custom-code-card {
        background: #f0fafd;
        box-shadow: 0 8px 20px rgba(6, 187, 204, 0.1);
        border-radius: 2rem;
        transition: all 0.3s ease;
    }

        .custom-code-card:hover {
            box-shadow: 0 12px 24px rgba(6, 187, 204, 0.2);
        }

    .text-gradient {
        background: linear-gradient(45deg, #06bbcc, #007c91);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: bold;
    }

    .custom-blue-btn {
        background: linear-gradient(to right, #06bbcc, #007c91);
        color: white;
        border: none;
        transition: all 0.3s ease;
    }

        .custom-blue-btn:hover {
            background: #05a5b4;
            color: #fff;
            box-shadow: 0 0 10px rgba(6, 187, 204, 0.5);
        }

    form.bg-light {
        border-radius: 1.5rem;
    }

    .btn-icon {
        background-color: #e9f8fb;
        color: #007c91;
        border: none;
        border-radius: 50%;
        width: 36px;
        height: 36px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
    }

        .btn-icon:hover {
            background-color: #d4f1f9;
            color: #005f6b;
            box-shadow: 0 0 8px rgba(6, 187, 204, 0.4);
        }

    .highlighted {
        animation: highlightFade 1.5s ease;
    }

    @@keyframes highlightFade {
        0%

    {
        background-color: #ccf4ff;
    }

    100% {
        background-color: white;
    }

    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function pasteCode() {
            navigator.clipboard.readText().then(function (text) {
                const input = document.getElementById('codeInput');
                input.value = text;

                // إضافة تأثير Highlight
                input.classList.add('highlighted');

                // إزالة التأثير بعد 1.5 ثانية
                setTimeout(() => {
                    input.classList.remove('highlighted');
                }, 1500);
            }).catch(function (err) {
                alert('Failed to read clipboard: ' + err);
            });
        }
    </script>
}
