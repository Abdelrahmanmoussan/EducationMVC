@model IdentityText.Models.ViewModel.ClassGroupVM

@{
    ViewData["Title"] = "Edit";
}

<div class="container mt-5">
    <div class="col-sm-12 col-xl-6 col-xl-12">
        <div class="bg-secondary rounded h-100 p-4">
            <h6 class="mb-4">Edit Class Group Item</h6>
            <form asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="@Model.ClassGroupId" />
                <div class="form-group">
                    <label asp-for="@Model.Title" class="control-label"></label>
                    <input asp-for="@Model.Title" class="form-control" />
                    <span asp-validation-for="@Model.Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Location" class="control-label"></label>
                    <input asp-for="@Model.Location" class="form-control" />
                    <span asp-validation-for="@Model.Location" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.Price" class="control-label"></label>
                    <input asp-for="@Model.Price" class="form-control" />
                    <span asp-validation-for="@Model.Price" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.StartDate" class="control-label"></label>
                    <input asp-for="@Model.StartDate" class="form-control" />
                    <span asp-validation-for="@Model.StartDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="@Model.EndDate" class="control-label"></label>
                    <input asp-for="@Model.EndDate" class="form-control" />
                    <span asp-validation-for="@Model.EndDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="SubjectId" class="control-label"></label>
                    <select asp-for="SubjectId" id="subjectSelect" class="form-control" asp-items="@Model.SubjectsList"></select>
                    <span asp-validation-for="SubjectId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TeacherId" class="control-label"></label>
                    <select asp-for="TeacherId" class="form-control" asp-items="Model.TeacherList">
                        <option value="">-- Select Teacher --</option>
                    </select>
                    <span asp-validation-for="TeacherId" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="AcademicYearId" class="control-label"></label>
                    <select asp-for="AcademicYearId" class="form-control" asp-items="@Model.AcademicYearsList"></select>
                    <span asp-validation-for="AcademicYearId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            $(document).ready(function () {
                $('#subjectSelect').change(function () {
                    var subjectId = $(this).val();
                    if (subjectId) {
                        $.ajax({
                            url: '@Url.Action("GetTeachersBySubject")',
                            data: { subjectId: subjectId },
                            success: function (data) {
                                var teacherSelect = $('#teacherSelect');
                                teacherSelect.empty();
                                $.each(data, function (i, teacher) {
                                    teacherSelect.append($('<option>', {
                                        value: teacher.teacherId,
                                        text: teacher.fullName
                                    }));
                                });
                            }
                        });
                    } else {
                        $('#teacherSelect').empty();
                    }
                });
            });
        </script>
    }

    <script>
        $(document).ready(function () {
            function loadTeachers(subjectId, selectedTeacherId) {
                if (subjectId) {
                    $.ajax({
                        url: '@Url.Action("GetTeachersBySubject")',
                        data: { subjectId: subjectId },
                        success: function (data) {
                            var teacherSelect = $('#teacherSelect');
                            teacherSelect.empty();
                            $.each(data, function (i, teacher) {
                                teacherSelect.append($('<option>', {
                                    value: teacher.teacherId,
                                    text: teacher.fullName,
                                    selected: teacher.teacherId == selectedTeacherId
                                }));
                            });
                        }
                    });
                } else {
                    $('#teacherSelect').empty();
                }
            }

            var initialSubjectId = $('#subjectSelect').val();
            var initialTeacherId = '@Model.TeacherId';

            loadTeachers(initialSubjectId, initialTeacherId);

            $('#subjectSelect').change(function () {
                var subjectId = $(this).val();
                loadTeachers(subjectId, null);
            });
        });
    </script>

}
